/* Filters Sidebar */

.mainFilters > form {
    display: flex;
    flex-direction: column;
    gap: var(--flexGapLarge);
    width: 100%;
    align-items: center;
}

.mainFilters > form > div:nth-child(even) {
    background-color: var(--secondaryLighterBackgroundColor);
    color: var(--secondaryLighterForegroundColor);
}

.mainFilters > form > div {
    height: var(--interactiveHeightLarge);
    --interactiveHeightInside: calc(var(--interactiveHeightLarge) - 2 * var(--boxPadding));
    line-height: calc(var(--interactiveHeightLarge) - 2 * var(--boxPadding));
    display: grid;
    /*grid-template-columns: 8fr 24fr 1fr;*/
    grid-template-columns: 1fr 4fr;
    width: 100%;
    text-align: center;
    align-items: center;
    justify-items: center;
    gap: var(--flexGap);
    padding: var(--boxPadding);
    border-radius: var(--boxBorderRadius);
}

.mainFilters > form > div > div {
    display: grid;
    grid-template-columns: 1fr 2fr 1fr;
    width: 100%;
    height: var(--interactiveHeightInside);
    grid-template-rows: 1fr;
    text-align: center;
    align-items: center;
    justify-items: center;
    gap: var(--flexGap);
    padding: 0% 15%;
}

.filterName {
    text-align: left;
    width: inherit;
}

.mainFilters > form > div > img {
    display: none;
    width: 100%;
    opacity: 50%;
    cursor: pointer;
    transition: transform var(--animationSpeed);
}
.mainFilters > form > div > img:hover {
    transform: rotate(90deg);
}

#filtersButtonClose {
    display: none;
    height: calc(var(--searchTitleHeight) - 2 * var(--boxPadding));
    position: absolute;
    top: var(--boxPadding);
    right: var(--boxPadding);
}
#filtersButtonOpen {
    display: none;
    height: calc(var(--searchTitleHeight) - 2 * var(--boxPadding));
}

#filterButtonSubmit {
    display: none;
}

/* Button */

.filterButton {
    background-color: transparent;
    width: inherit;
    outline: 0;
    border: 0;
    font-size: inherit;
    font-weight: inherit;
    border-radius: var(--boxBorderRadius);
    padding: var(--boxPaddingTiny);
}
.page > .filterButton {
    background-color: var(--accentBackgroundColor);
    color: var(--accentForegroundColor);
}
.page > .filterButton:hover {
    background-color: var(--plainBackgroundColor);
    color: var(--plainForegroundColor);
}
.mainFilters > form > div:nth-child(even) > div > .filterButton {
    background-color: var(--secondaryBackgroundColor);
    color: var(--secondaryForegroundColor);
}
.mainFilters > form > div:nth-child(even) > div > .filterButton:hover {
    background-color: var(--primaryLighterBackgroundColor);
    color: var(--primaryLighterForegroundColor);
}
.mainFilters > form > div:nth-child(odd) > div > .filterButton {
    background-color: var(--primaryBackgroundColor);
    color: var(--primaryForegroundColor);
}
.mainFilters > form > div:nth-child(odd) > div > .filterButton:hover {
    background-color: var(--primaryLighterBackgroundColor);
    color: var(--primaryLighterForegroundColor);
}
.filterSubmit {
    background-color: var(--primaryBackgroundColor);
    color: var(--primaryForegroundColor);
    width: 50%;
    padding: var(--boxPaddingSmall);
    border-radius: var(--boxBorderRadius);
}
.filterSubmit:hover {
    background-color: var(--primaryLighterBackgroundColor);
    color: var(--primaryLighterForegroundColor);
}

/* General Input */

.filterInput {
    width: 100%;
    height: 100%;
    display: inline;
    padding: var(--boxPaddingSmall);
    margin: 0;
    text-align: center;
    color: inherit;
    background-color: transparent;
    font-size: inherit;
    font-weight: inherit;
    border: 0;
    outline: 0;
}

/* Number Input */

.filterInput[type=number] {
    appearance: textfield;
}

.filterInput::-webkit-outer-spin-button,
.filterInput::-webkit-inner-spin-button {
    appearance: none;
    -webkit-appearance: none;
    margin: 0;
}

/* Range Input */

.filterInputRangeDiv {
    grid-template-columns: 1fr 2fr 1fr !important;
    padding: 0 !important;
}

div.filterInput {
    position: relative !important;
    padding: 0;
    margin: 0;
    border-radius: var(--boxBorderRadius);
}

.filterInput[type=range] {
    position: absolute !important;
    display: inline;
    appearance: none;
    -webkit-appearance: none;
    position: relative;
    top: 0;
    left: 0;
    padding: 0;
    margin: 0;
    /*pointer-events: none;*/
    width: 100% !important;
    max-width: 100%;
}
.filterInputUpperSlider {
    top: -33% !important;
}
.filterInputLowerSlider {
    top: 33% !important;
}

.mainFilters > form > div:nth-child(odd) > div > div.filterInput {
    background-color: var(--secondaryLighterBackgroundColor);
}
.mainFilters > form > div:nth-child(even) > div > div.filterInput {
    background-color: var(--primaryLighterBackgroundColor);
}

.filterInput[type=range]::-webkit-slider-thumb {
    appearance: none;
    -webkit-appearance: none;
    background-color: transparent;
    outline: 0;
    border: 0;
    height: 100%;
    box-shadow: inset 0 100% 0 0 black;
}
.filterInput[type=range]::-moz-range-thumb {
    appearance: none;
    -webkit-appearance: none;
    background-color: white;
    outline: 0;
    border: 0;
    height: calc(var(--interactiveHeightInside) * .75);
    /*width: var(--interactiveHeightInside);*/
    /*border-radius: var(--interactiveHeightInside);*/
    border-radius: 0;
    width: .5em;
    border-radius: .5em;
    pointer-events: auto;
    position: relative !important;
    box-shadow: none;
}
.filterInput[type=range]::-ms-thumb {
    appearance: none;
    -webkit-appearance: none;
    background-color: transparent;
    outline: 0;
    border: 0;
    box-shadow: 0 0 2px 0 #555;
    height: 100%;
    box-shadow: inset 0 100% 0 0 black;
}

.filterInput[type=range]::-webkit-slider-runnable-track {
    appearance: none;
    -webkit-appearance: none;
    box-shadow: none;
    border: none;
    background: none;
    pointer-events: none;
}
.filterInput[type=range]::-moz-range-track {
    appearance: none;
    -webkit-appearance: none;
    box-shadow: none;
    border: none;
    background: none;
    pointer-events: none;
}
.filterInput[type=range]::-ms-track {
    appearance: none;
    -webkit-appearance: none;
    box-shadow: none;
    border: none;
    background: none;
    pointer-events: none;
}

/* Date */

.filterInputDateDiv {
    position: relative;
    display: block !important;
}

#filterInputDateField {
    white-space: nowrap;
    text-align: center;
    cursor: pointer;
}

#inputCalendar {
    position: absolute;
    left: 0;
    width: 100%;
    height: var(--calendarHeight);
    border-radius: var(--boxBorderRadiusSmall);
    padding: var(--boxPaddingSmall);
    display: none;
    grid-template-columns: repeat(7, 1fr);
    grid-template-rows: repeat(6, 1fr);
    text-align: center;
}

#inputCalendar.visible {
    display: grid;
}

.mainFilters > form > div:nth-child(odd) > div.filterInputDateDiv > #inputCalendar {
    background-color: var(--primaryBackgroundColor);
    /*border: solid var(--borderWidth) var(--secondaryBackgroundColor);*/
}
.mainFilters > form > div:nth-child(even) > div.filterInputDateDiv > #inputCalendar {
    background-color: var(--secondaryBackgroundColor); 
    /*border: solid var(--borderWidth) var(--primaryBackgroundColor);*/
}

#inputCalendarMonth {
    grid-column-start: 2;
    grid-column-end: 7;
    grid-row: 1;
}

#inputCalendarLeft {
    grid-column: 1;
    grid-row: 1;
    cursor: pointer;
    user-select: none;
}

#inputCalendarRight {
    grid-column: 7;
    grid-row: 1;
    cursor: pointer;
    user-select: none;
}

.inputCalendarOffset {
    grid-column-start: 1;
    grid-column-end: var(--offset, 1);
    grid-row: 1;
}

.inputCalendarDay {
    cursor: pointer;
}

/* Select */

.filterInputSelectDiv {
    grid-template-columns: 1fr !important;
    position: relative;
}
.filterInputSelectDiv > span {
    cursor: pointer;
}
.filterInputSelectDiv > div {
    position: absolute;
    left: 0;
    width: 100%;
    height: auto;
    border-radius: var(--boxBorderRadiusSmall);
    padding: var(--boxPaddingSmall);
    display: none;
    text-align: center;
    background-color: inherit;
    flex-direction: column;
    gap: var(--flexGap);
}
.filterInputSelectDiv > div > option {
    position: relative;
    cursor: pointer;
    border-radius: var(--boxBorderRadiusSmall);
    min-height: var(--selectOptionHeight) !important;
}
.mainFilters > form > div:nth-child(odd) .filterInputSelectDiv > div {
    background-color: var(--primaryBackgroundColor);
}
.mainFilters > form > div:nth-child(even) .filterInputSelectDiv > div {
    background-color: var(--secondaryBackgroundColor); 
}
.mainFilters > form > div:nth-child(odd) .filterInputSelectDiv > div > option:hover {
    background-color: var(--primaryLighterBackgroundColor);
}
.mainFilters > form > div:nth-child(even) .filterInputSelectDiv > div > option:hover {
    background-color: var(--secondaryLighterBackgroundColor); 
}
.filterInputSelectDiv > div.visible {
    display: flex;
}

/* General Popups */

.popup {
    z-index: 20;
    max-height: 50vh;
    overflow-y: auto;
}
.popupDown {
    bottom: calc(var(--interactiveHeightInside) + 2 * var(--borderWidth));
}
.popupUp {
    top: calc(var(--interactiveHeightInside) + 2 * var(--borderWidth));
}

/* Hover Shadow */
.underline {
    transition: width var(--animationSpeed), box-shadow var(--animationSpeed);
}
.mainFilters > form > div:nth-child(odd) .underline:hover {
    box-shadow: 0 var(--borderWidth) 0 0 var(--secondaryDarkerBackgroundColor); 
}
.mainFilters > form > div:nth-child(odd) .underline:focus {
    box-shadow: 0 var(--borderWidth) 0 0 var(--secondaryDarkerBackgroundColor); 
}
.mainFilters > form > div:nth-child(even) .underline:hover {
    box-shadow: 0 var(--borderWidth) 0 0 var(--secondaryBackgroundColor); 
}
.mainFilters > form > div:nth-child(even) .underline:focus {
    box-shadow: 0 var(--borderWidth) 0 0 var(--secondaryBackgroundColor); 
}

/* Search Field */

.textInput {
    width: 100% !important;
    max-width: 100% !important;
    min-width: 100% !important;
    display: block;
    position: relative;
    border-radius: var(--boxBorderRadius);
    margin: var(--flexGapLarge) 0 !important;
}

.mainFilters > form > div:nth-child(even) .textInput {
    background-color: var(--secondaryBackgroundColor);
    color: var(--secondaryForegroundColor);
}
.mainFilters > form > div:nth-child(even) .textInput:hover {
    background-color: var(--secondaryLighterBackgroundColor);
    color: var(--secondaryLighterForegroundColor);
}
.mainFilters > form > div:nth-child(even) .textInput:focus {
    background-color: var(--secondaryLighterBackgroundColor);
    color: var(--secondaryLighterForegroundColor);
}
.mainFilters > form > div:nth-child(odd) .textInput {
    background-color: var(--primaryBackgroundColor);
    color: var(--primaryForegroundColor);
}
.mainFilters > form > div:nth-child(odd) .textInput:hover {
    background-color: var(--primaryLighterBackgroundColor);
    color: var(--primaryLighterForegroundColor);
}
.mainFilters > form > div:nth-child(odd) .textInput:focus {
    background-color: var(--primaryLighterBackgroundColor);
    color: var(--primaryLighterForegroundColor);
}

/* Checkbox */

.checkboxContainer {
    display: block;
    position: relative;
    cursor: pointer;
    width: var(--interactiveHeightInside) !important;
    padding: 0 !important;
}
.checkboxContainer > .filterInput[type=checkbox] {
    width: var(--interactiveHeightInside);
    height: var(--interactiveHeightInside);
    opacity: 0;
    cursor: pointer;
    z-index: 5;
}
.checkbox {
    position: absolute;
    top: 0;
    left: 0;
    width: var(--interactiveHeightInside);
    height: var(--interactiveHeightInside);
    border-radius: var(--interactiveHeightInside);
}
.mainFilters > form > div:nth-child(even) .checkbox {
    background-color: var(--secondaryBackgroundColor);
    color: var(--secondaryForegroundColor);
}
.mainFilters > form > div:nth-child(odd) .checkbox {
    background-color: var(--primaryBackgroundColor);
    color: var(--primaryForegroundColor);
}
.mainFilters > form > div:nth-child(even) .checkboxContainer:hover input ~ .checkbox {
    background-color: var(--primaryLighterBackgroundColor);
    color: var(--primaryLighterForegroundColor);
}
.mainFilters > form > div:nth-child(odd) .checkboxContainer:hover input ~ .checkbox {
    background-color: var(--primaryLighterBackgroundColor);
    color: var(--primaryLighterForegroundColor);
}
.checkboxContainer input:checked ~ .checkbox {
    background-color: #2196F3;
}
.checkbox:after {
    content: "";
    position: absolute;
    display: none;
}
.checkboxContainer input:checked ~ .checkbox:after {
    display: block;
}
.checkboxContainer .checkbox:after {
    left: calc(var(--interactiveHeightInside) / 3.5);
    top: calc(var(--interactiveHeightInside) / 8);
    width: calc(var(--interactiveHeightInside) / 4);
    height: calc(var(--interactiveHeightInside) / 2);
    border: solid currentColor;
    border-width: 0 calc(var(--interactiveHeightInside) / 6) calc(var(--interactiveHeightInside) / 6) 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}
  

/* Responsiveness */

@media screen and (max-width: 1000px) {
    .mainFilters {
        position: fixed;
        width: 100%;
        height: 100%;
        z-index: 50;
        transition: transform var(--animationSpeedSlow);
    }
    .mainFilters.hidden {
        transform: translateX(-100%);
    }
    #filtersButtonOpen {
        display: block;
    }
    #filtersButtonClose {
        display: block;
    }
    #filterButtonSubmit {
        display: block;
    }
}